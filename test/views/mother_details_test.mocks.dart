// Mocks generated by Mockito 5.4.4 from annotations
// in fetosense_remote_flutter/test/views/mother_details_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'package:fetosense_remote_flutter/core/model/mother_model.dart' as _i2;
import 'package:flutter/src/widgets/navigator.dart' as _i3;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

/// A class which mocks [Mother].
///
/// See the documentation for Mockito's code generation for more information.
class MockMother extends _i1.Mock implements _i2.Mother {
  MockMother() {
    _i1.throwOnMissingStub(this);
  }

  @override
  set lmp(DateTime? _lmp) => super.noSuchMethod(
        Invocation.setter(
          #lmp,
          _lmp,
        ),
        returnValueForMissingStub: null,
      );

  @override
  set edd(DateTime? _edd) => super.noSuchMethod(
        Invocation.setter(
          #edd,
          _edd,
        ),
        returnValueForMissingStub: null,
      );

  @override
  set name(String? _name) => super.noSuchMethod(
        Invocation.setter(
          #name,
          _name,
        ),
        returnValueForMissingStub: null,
      );

  @override
  set email(String? _email) => super.noSuchMethod(
        Invocation.setter(
          #email,
          _email,
        ),
        returnValueForMissingStub: null,
      );

  @override
  set mobileNo(int? _mobileNo) => super.noSuchMethod(
        Invocation.setter(
          #mobileNo,
          _mobileNo,
        ),
        returnValueForMissingStub: null,
      );

  @override
  set organizationId(String? _organizationId) => super.noSuchMethod(
        Invocation.setter(
          #organizationId,
          _organizationId,
        ),
        returnValueForMissingStub: null,
      );

  @override
  set organizationName(String? _organizationName) => super.noSuchMethod(
        Invocation.setter(
          #organizationName,
          _organizationName,
        ),
        returnValueForMissingStub: null,
      );

  @override
  set age(int? _age) => super.noSuchMethod(
        Invocation.setter(
          #age,
          _age,
        ),
        returnValueForMissingStub: null,
      );

  @override
  set documentId(String? _documentId) => super.noSuchMethod(
        Invocation.setter(
          #documentId,
          _documentId,
        ),
        returnValueForMissingStub: null,
      );

  @override
  bool get delete => (super.noSuchMethod(
        Invocation.getter(#delete),
        returnValue: false,
      ) as bool);

  @override
  set delete(bool? _delete) => super.noSuchMethod(
        Invocation.setter(
          #delete,
          _delete,
        ),
        returnValueForMissingStub: null,
      );

  @override
  set autoModifiedTimeStamp(DateTime? _autoModifiedTimeStamp) =>
      super.noSuchMethod(
        Invocation.setter(
          #autoModifiedTimeStamp,
          _autoModifiedTimeStamp,
        ),
        returnValueForMissingStub: null,
      );

  @override
  set createdBy(String? _createdBy) => super.noSuchMethod(
        Invocation.setter(
          #createdBy,
          _createdBy,
        ),
        returnValueForMissingStub: null,
      );

  @override
  set createdOn(DateTime? _createdOn) => super.noSuchMethod(
        Invocation.setter(
          #createdOn,
          _createdOn,
        ),
        returnValueForMissingStub: null,
      );

  @override
  set deviceId(String? _deviceId) => super.noSuchMethod(
        Invocation.setter(
          #deviceId,
          _deviceId,
        ),
        returnValueForMissingStub: null,
      );

  @override
  set deviceName(String? _deviceName) => super.noSuchMethod(
        Invocation.setter(
          #deviceName,
          _deviceName,
        ),
        returnValueForMissingStub: null,
      );

  @override
  set doctorId(String? _doctorId) => super.noSuchMethod(
        Invocation.setter(
          #doctorId,
          _doctorId,
        ),
        returnValueForMissingStub: null,
      );

  @override
  set amcLog(List<dynamic>? _amcLog) => super.noSuchMethod(
        Invocation.setter(
          #amcLog,
          _amcLog,
        ),
        returnValueForMissingStub: null,
      );

  @override
  set amcPayment(dynamic _amcPayment) => super.noSuchMethod(
        Invocation.setter(
          #amcPayment,
          _amcPayment,
        ),
        returnValueForMissingStub: null,
      );

  @override
  set amcStartDate(String? _amcStartDate) => super.noSuchMethod(
        Invocation.setter(
          #amcStartDate,
          _amcStartDate,
        ),
        returnValueForMissingStub: null,
      );

  @override
  set amcValidity(String? _amcValidity) => super.noSuchMethod(
        Invocation.setter(
          #amcValidity,
          _amcValidity,
        ),
        returnValueForMissingStub: null,
      );

  @override
  set appVersion(String? _appVersion) => super.noSuchMethod(
        Invocation.setter(
          #appVersion,
          _appVersion,
        ),
        returnValueForMissingStub: null,
      );

  @override
  set associations(Map<String, dynamic>? _associations) => super.noSuchMethod(
        Invocation.setter(
          #associations,
          _associations,
        ),
        returnValueForMissingStub: null,
      );

  @override
  set bulletin(Map<String, dynamic>? _bulletin) => super.noSuchMethod(
        Invocation.setter(
          #bulletin,
          _bulletin,
        ),
        returnValueForMissingStub: null,
      );

  @override
  set deviceCode(String? _deviceCode) => super.noSuchMethod(
        Invocation.setter(
          #deviceCode,
          _deviceCode,
        ),
        returnValueForMissingStub: null,
      );

  @override
  set isActive(bool? _isActive) => super.noSuchMethod(
        Invocation.setter(
          #isActive,
          _isActive,
        ),
        returnValueForMissingStub: null,
      );

  @override
  set lastSeenTime(String? _lastSeenTime) => super.noSuchMethod(
        Invocation.setter(
          #lastSeenTime,
          _lastSeenTime,
        ),
        returnValueForMissingStub: null,
      );

  @override
  set modifiedAt(DateTime? _modifiedAt) => super.noSuchMethod(
        Invocation.setter(
          #modifiedAt,
          _modifiedAt,
        ),
        returnValueForMissingStub: null,
      );

  @override
  set modifiedTimeStamp(String? _modifiedTimeStamp) => super.noSuchMethod(
        Invocation.setter(
          #modifiedTimeStamp,
          _modifiedTimeStamp,
        ),
        returnValueForMissingStub: null,
      );

  @override
  set noOfMother(int? _noOfMother) => super.noSuchMethod(
        Invocation.setter(
          #noOfMother,
          _noOfMother,
        ),
        returnValueForMissingStub: null,
      );

  @override
  set noOfTests(int? _noOfTests) => super.noSuchMethod(
        Invocation.setter(
          #noOfTests,
          _noOfTests,
        ),
        returnValueForMissingStub: null,
      );

  @override
  set notificationToken(String? _notificationToken) => super.noSuchMethod(
        Invocation.setter(
          #notificationToken,
          _notificationToken,
        ),
        returnValueForMissingStub: null,
      );

  @override
  set sync(int? _sync) => super.noSuchMethod(
        Invocation.setter(
          #sync,
          _sync,
        ),
        returnValueForMissingStub: null,
      );

  @override
  set testAccount(bool? _testAccount) => super.noSuchMethod(
        Invocation.setter(
          #testAccount,
          _testAccount,
        ),
        returnValueForMissingStub: null,
      );

  @override
  set type(String? _type) => super.noSuchMethod(
        Invocation.setter(
          #type,
          _type,
        ),
        returnValueForMissingStub: null,
      );

  @override
  set uid(String? _uid) => super.noSuchMethod(
        Invocation.setter(
          #uid,
          _uid,
        ),
        returnValueForMissingStub: null,
      );

  @override
  set weight(double? _weight) => super.noSuchMethod(
        Invocation.setter(
          #weight,
          _weight,
        ),
        returnValueForMissingStub: null,
      );

  @override
  set patientId(String? _patientId) => super.noSuchMethod(
        Invocation.setter(
          #patientId,
          _patientId,
        ),
        returnValueForMissingStub: null,
      );

  @override
  set platformId(String? _platformId) => super.noSuchMethod(
        Invocation.setter(
          #platformId,
          _platformId,
        ),
        returnValueForMissingStub: null,
      );

  @override
  set platformRegAt(String? _platformRegAt) => super.noSuchMethod(
        Invocation.setter(
          #platformRegAt,
          _platformRegAt,
        ),
        returnValueForMissingStub: null,
      );

  @override
  Map<String, dynamic> toJson() => (super.noSuchMethod(
        Invocation.method(
          #toJson,
          [],
        ),
        returnValue: <String, dynamic>{},
      ) as Map<String, dynamic>);
}

/// A class which mocks [NavigatorObserver].
///
/// See the documentation for Mockito's code generation for more information.
class MockNavigatorObserver extends _i1.Mock implements _i3.NavigatorObserver {
  MockNavigatorObserver() {
    _i1.throwOnMissingStub(this);
  }

  @override
  void didPush(
    _i3.Route<dynamic>? route,
    _i3.Route<dynamic>? previousRoute,
  ) =>
      super.noSuchMethod(
        Invocation.method(
          #didPush,
          [
            route,
            previousRoute,
          ],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void didPop(
    _i3.Route<dynamic>? route,
    _i3.Route<dynamic>? previousRoute,
  ) =>
      super.noSuchMethod(
        Invocation.method(
          #didPop,
          [
            route,
            previousRoute,
          ],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void didRemove(
    _i3.Route<dynamic>? route,
    _i3.Route<dynamic>? previousRoute,
  ) =>
      super.noSuchMethod(
        Invocation.method(
          #didRemove,
          [
            route,
            previousRoute,
          ],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void didReplace({
    _i3.Route<dynamic>? newRoute,
    _i3.Route<dynamic>? oldRoute,
  }) =>
      super.noSuchMethod(
        Invocation.method(
          #didReplace,
          [],
          {
            #newRoute: newRoute,
            #oldRoute: oldRoute,
          },
        ),
        returnValueForMissingStub: null,
      );

  @override
  void didChangeTop(
    _i3.Route<dynamic>? topRoute,
    _i3.Route<dynamic>? previousTopRoute,
  ) =>
      super.noSuchMethod(
        Invocation.method(
          #didChangeTop,
          [
            topRoute,
            previousTopRoute,
          ],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void didStartUserGesture(
    _i3.Route<dynamic>? route,
    _i3.Route<dynamic>? previousRoute,
  ) =>
      super.noSuchMethod(
        Invocation.method(
          #didStartUserGesture,
          [
            route,
            previousRoute,
          ],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void didStopUserGesture() => super.noSuchMethod(
        Invocation.method(
          #didStopUserGesture,
          [],
        ),
        returnValueForMissingStub: null,
      );
}
